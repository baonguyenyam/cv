var $window = $('.js-perspective-window'),
    $document = $('.js-perspective-document');

$(function() {
    $window.scrollTop(0);
    
    var ieBrowser = detectIE();
    if (ieBrowser !== false)
    {
        $('html').addClass('is-ms-browser');
        
        if (ieBrowser >= 12) {
            $('html').addClass('is-edge'+ieBrowser);
        } else {
            $('html').addClass('is-ie'+ieBrowser);
        }
    }
    
    var safariBrowser = detectSafari();
    if (safariBrowser === true)
        $('html').addClass('is-safari');
    
    var ua = window.navigator.userAgent,
        msie = ua.indexOf('MSIE '),
        trident = ua.indexOf('Trident/'),
        edge = ua.indexOf('Edge/');
    
    function detectIE() {
        if (msie > 0) {
            // IE 10 or older => return version number
            return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
        }

        if (trident > 0) {
            // IE 11 => return version number
            var rv = ua.indexOf('rv:');
            return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
        }

        if (edge > 0) {
            // Edge (IE 12+) => return version number
            return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
        }

        return false;
    }
    
    function detectSafari() {
        if ( /^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
            return true;
        }
        
        return false;
    }

	if ($.fn.fancybox) {
		$.extend(true, $.fancybox.defaults, {
			hash : false,
			lang : 'pl',
			i18n : {
				'pl' : {
					CLOSE       : 'Zamknij',
					NEXT        : 'Następny',
					PREV        : 'Poprzedni',
					ERROR       : 'Zawartość nie mogła zostać wczytana. <br/> Spróbuj później.',
					PLAY_START  : 'Uruchom pokaz',
					PLAY_STOP   : 'Zatrzymaj pokaz',
					FULL_SCREEN : 'Pełny ekran',
					THUMBS      : 'Miniaturki'
				}
			}
		});

		$('.js-magnific').fancybox();
		
		$(document).on('click', '.js-modal', function(e) {
			var modal = $(this).data('modal');
            
			if ($(modal).length)
			{
				openModal(modal, $(this));
				e.preventDefault();
			}
		});
		
		$(document).on('click', '.js-modal-close', function (e) {
			e.preventDefault();
			$.fancybox.close();
		});
        
        $('.modal').on('click', '[data-fancybox]', function(){
            parent.jQuery.fancybox.getInstance().close();
        });
		
		function openModal(src, $trigger)
        {
            $.fancybox.close();
			$.fancybox.open({
				src: src,
				type: 'inline',
				opts : {
					modal : true,
					smallBtn: false,
					beforeShow: function( instance, current ) {

					},
					afterClose: function( instance, current ) {

					}
				}
			});
        }
        
        if (window.location.hash !== '') {
            if ($(window.location.hash+'-modal').length) {
                if ($('#alerts-modal .alert').length) {
                    $('.modal__inner', $(window.location.hash+'-modal')).prepend($('#alerts-modal .alert'));
                    $('#alerts-modal').remove();
                }
                
                openModal(window.location.hash+'-modal');
            }
        }
	}
	
	if($.fn.validate) {
		$.validator.setDefaults({
            highlight: function(element, errorClass, validClass) {
                var $element = $(element);
                $element.addClass(errorClass).removeClass(validClass);
                if ($element.attr('type') == 'checkbox' || $element.attr('type') == 'radio' || $element.attr('type') == 'file') {
                    if ($element.attr('type') == 'checkbox') {
                        $element.closest('.checkbox').addClass('error-checkbox');
                    } else if ($element.attr('type') == 'radio') {
                        $element.closest('.radio').addClass('error-radio');
                    } else if ($element.attr('type') == 'file') {
                        $element.closest('.fileuploader').addClass('error-fileuploader');
                    }
                } else if ($element.prop("tagName") == 'SELECT') {
                    $element.closest('.select').addClass('error-select');
                } else if ($element.prop("tagName") == 'TEXTAREA') {
                    $element.closest('.wysiwyg-editor').addClass('error-wysiwyg');
                }
            },
            unhighlight: function(element, errorClass, validClass) {
                var $element = $(element);
                $element.removeClass(errorClass).addClass(validClass);
                if ($element.attr('type') == 'checkbox' || $element.attr('type') == 'radio' || $element.attr('type') == 'file') {
                    if ($element.attr('type') == 'checkbox') {
                        $element.closest('.checkbox').removeClass('error-checkbox');
                    } else if ($element.attr('type') == 'radio') {
                        $element.closest('.radio').removeClass('error-radio');
                    } else if ($element.attr('type') == 'file') {
                        $element.closest('.fileuploader').removeClass('error-fileuploader');
                    }
                } else if ($element.prop("tagName") == 'SELECT') {
                    $element.closest('.select').removeClass('error-select');
                } else if ($element.prop("tagName") == 'TEXTAREA') {
                    $element.closest('.wysiwyg-editor').removeClass('error-wysiwyg');
                }
            },
            errorPlacement: function(error, element) {
                if (element.closest('.select').hasClass('error-select'))
                    error.insertAfter(element.closest('.select'));
                else if (element.closest('.checkbox').hasClass('error-checkbox'))
                    error.insertAfter(element.closest('.checkbox'));
                else if (element.closest('.radio').hasClass('error-radio'))
                    error.insertAfter(element.closest('.radio'));
                else if (element.closest('.wysiwyg-editor').hasClass('error-wysiwyg'))
                    error.insertAfter(element.closest('.wysiwyg-editor'));
                else if (element.closest('.fileuploader').hasClass('error-fileuploader'))
                    error.insertAfter(element.closest('.fileuploader'));
                else
                    error.insertAfter(element);
            },
            ignore: ':hidden:not([type="hidden"]):not(select)'
        });

		$('form.js-validate').each(function() {
			$(this).validate();
		});
	}
    
    if($.fn.tooltipster) {
       $('.js-tooltip').tooltipster({
           animation: 'grow',
           maxWidth: 800,
           distance: 2,
           trigger: 'click'
       });
    }

    if($.fn.owlCarousel) {
        $('.js-project-screens-slider').owlCarousel({
            items: 2,
            margin: 80,
            loop: false,
            nav: true,
            dots: true,
            autoplay: false,
            autoplaySpeed: 800,
            navSpeed: 800,
            dotsSpeed: 800,
            dragEndSpeed: 800,
            autoplayTimeout: 5000,
            autoplayHoverPause: false,
            stagePadding: 0,
            navText: ['<i class="ico ico-long-arrow-left"></i>','<i class="ico ico-long-arrow-right"></i>'],
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    margin: 30
                },
                576: {
                    margin: 30
                },
                800: {
                    
                }
            }
        });
        
        $('.js-opinions-screens-slider').owlCarousel({
            items: 2,
            margin: 80,
            loop: false,
            nav: true,
            dots: true,
            autoplay: false,
            autoplaySpeed: 800,
            navSpeed: 800,
            dotsSpeed: 800,
            dragEndSpeed: 800,
            autoplayTimeout: 5000,
            autoplayHoverPause: false,
            stagePadding: 0,
            navText: ['<i class="ico ico-long-arrow-left"></i>','<i class="ico ico-long-arrow-right"></i>'],
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    margin: 30
                },
                576: {
                    margin: 30
                },
                800: {
                    
                }
            }
        });

        $('.js-testimonials-slider').owlCarousel({
            items: 1,
            margin: 30,
            loop: true,
            nav: false,
            dots: true,
            autoplay: true,
            autoplaySpeed: 800,
            navSpeed: 800,
            dotsSpeed: 800,
            dragEndSpeed: 800,
            autoplayTimeout: 5000,
            autoplayHoverPause: false,
            stagePadding: 0,
            navText: ['',''],
            responsiveClass: true
        });
        
        if ($('.js-hash-screens-slider').length)
        {
            var $hashSlider = $('.js-hash-screens-slider'),
                $hashNav = $('.js-hash-nav');
        
            $hashSlider.on('initialized.owl.carousel', function(event) {
                selectHashNav($hashNav);
            });

            $hashSlider.owlCarousel({
                items: 1,
                margin: 30,
                loop: false,
                nav: true,
                dots: false,
                URLhashListener: true,
                startPosition: 'URLHash',
                autoplay: false,
                autoplaySpeed: 800,
                navSpeed: 800,
                dotsSpeed: 800,
                dragEndSpeed: 800,
                autoplayTimeout: 5000,
                autoplayHoverPause: false,
                stagePadding: 0,
                navText: ['<i class="ico ico-arrow-left"></i>','<i class="ico ico-arrow-right"></i>'],
                responsiveClass: true,
                responsive: {
                    0: {
                        dots: true,
                        nav: false
                    },
                    992: {

                    }
                } 
            });

            $hashSlider.on('changed.owl.carousel', function(event) {
                selectHashNav($hashNav);
            });
            
            function selectHashNav($nav) 
            {
                if (window.location.hash) {
                    $('a[href*="' + window.location.hash + '"]', $nav).addClass('is-active').parent().siblings().find('a').removeClass('is-active');
                }
            }
        }
    }
    
	if (typeof jcf == 'object') {
		jcf.setOptions('Select', {
			fakeDropInBody: false,
		    maxVisibleItems: 5,
		    wrapNative: false,
		    wrapNativeOnMobile: true,
			useCustomScroll: false
		});

        jcf.replace($('.js-select-jcf'));
		jcf.replace($('.js-radio'));
		jcf.replace($('.js-checkbox'));
	}
    
	$('.wysiwyg iframe').each(function(){
		$(this).wrap('<div class="embed-responsive embed-responsive--16by9"></div>');
	});

	$('.wysiwyg table').each(function(){
		var mT = $(this).css('margin-top'),
            mB = $(this).css('margin-bottom');
		$(this).css('margin-bottom','0').css('margin-top','0').wrap('<div class="table-responsive" style="margin-bottom: '+mB+'; margin-top: '+mT+';"></div>');
	});

    $('.js-mobile-menu').on('click', function() {
        $('.js-perspective').addClass('is-perspective is-perspective-open');
    });

    $('.js-freezer, .js-perspective-close').on('click', function() {
        $('.js-perspective').removeClass('is-perspective-open');
        setTimeout(function(){
            $('.js-perspective').removeClass('is-perspective');
        }, 400);
    });
    
    $('.js-step-section-jumper').on('click', function() {
        var $target = $(this).closest('.step-section').next('.step-section');

        $window.animate({
            scrollTop: $target.position().top
        }, 1000);
    });
    
    $('.js-cookies-close').on('click', function() {
        var parentElement = $(this).closest('.js-cookies');
        
        parentElement.fadeOut(600, function(){
            Cookies.set('cookiesAccept', true, { expires: 365 });
            parentElement.remove();
        });
    });    
    
    $('.js-jumper').on('click', function() {
        var jumpOffset = ($.isNumeric(parseInt($(this).data('jump-offset'))) ? parseInt($(this).data('jump-offset')) : 0);
        
        $window.animate({
            scrollTop: $($(this).data('jump-target')).position().top+jumpOffset
        }, 1000);
        e.preventDefault();
    });
    
    var prevWindowMode = null,
        windowWidth = $(window).width();
     
    $(window).on('resize.rwd', function(e) {
    	var windowMode = 0;
        
    	windowWidth = $(window).width();
    	
    	if (windowWidth > 991) {
    		windowMode = 0;
        } else {
    		windowMode = 1;
    	}
    	
        if (windowMode != prevWindowMode)
        {
            prevWindowMode = windowMode;
            switch (windowMode)
            {
                case 0:
                    hideNav();
                    break;
                 case 1:
                    resetHideNav();
                    break;
            }
        }
        
        decolines();
        
        if (parseInt(windowWidth) <= 1920) {
            $('.js-top').css('max-width', windowWidth - (parseInt(windowWidth) - parseInt($('.js-main').width())));
        }
        else {
            $('.js-top').css('max-width', 'none');
        }
        
        if ($('html').hasClass('is-home-page'))
        {
            if($.fn.owlCarousel && $('.js-home-slider').length) {
                var windowHeight = $window.height();

                //$('.js-home-slider-item', $('.js-home-slider')).css('min-height', windowHeight);   
                $('.js-home-slider-item', $('.js-home-slider')).css('height', windowHeight);   
            }
        }
        
    }).trigger('resize.rwd');
    
    var mapTarget = '.js-contact-map';
	if ($(mapTarget).length)
	{
        var objectsMap,
			baseLat = mapPoints[0][0],
			baseLng = mapPoints[0][1],
            mapCenterCoordinate = new google.maps.LatLng(baseLat, baseLng),
			objectMarkerIcon = {
                url: 'assets/img/marker.png',
                size: new google.maps.Size(110,110),
                origin: new google.maps.Point(0,0),
                anchor: new google.maps.Point(55,95)
            },
			boundsCorrection = false,
            bounds = new google.maps.LatLngBounds();

	    function mapInit() {
			var mapOptions = {
                    minZoom: 4,
                    maxZoom: 19,
                    zoom: 14,
                    center: mapCenterCoordinate,
                    scrollwheel: false,
                    mapTypeControl: true,
                    scaleControl: true,
                    draggable: true,
                    fullscreenControl: true,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    styles: [{"featureType": "water","elementType": "geometry","stylers": [{"color": "#e9e9e9"},{"lightness": 17}]},{"featureType": "landscape","elementType": "geometry","stylers": [{"color": "#f5f5f5"},{"lightness": 20}]},{"featureType": "road.highway","elementType": "geometry.fill","stylers": [{"color": "#ffffff"},{"lightness": 17}]},{"featureType": "road.highway","elementType": "geometry.stroke","stylers": [{"color": "#ffffff"},{"lightness": 29},{"weight": 0.2}]},{"featureType": "road.arterial","elementType": "geometry","stylers": [{"color": "#ffffff"},{"lightness": 18}]},{"featureType": "road.local","elementType": "geometry","stylers": [{"color": "#ffffff"},{"lightness": 16}]},{"featureType": "poi","elementType": "geometry","stylers": [{"color": "#f5f5f5"},{"lightness": 21}]},{"featureType": "poi.park","elementType": "geometry","stylers": [{"color": "#dedede"},{"lightness": 21}]},{"elementType": "labels.text.stroke","stylers": [{"visibility": "on"},{"color": "#ffffff"},{"lightness": 16}]},{"elementType": "labels.text.fill","stylers": [{"saturation": 36},{"color": "#333333"},{"lightness": 40}]},{"elementType": "labels.icon","stylers": [{"visibility": "off"}]},{"featureType": "transit","elementType": "geometry","stylers": [{"color": "#f2f2f2"},{"lightness": 19}]},{"featureType": "administrative","elementType": "geometry.fill","stylers": [{"color": "#fefefe"},{"lightness": 20}]},{"featureType": "administrative","elementType": "geometry.stroke","stylers": [{"color": "#fefefe"},{"lightness": 17},{"weight": 1.2}]}]
                };

			objectsMap = new google.maps.Map($(mapTarget)[0], mapOptions);

		    for (i = 0; i < mapPoints.length; i++) {
		        addObj(mapPoints[i]);
		    }

		    fitBounds();
		}

	    function addObj(item) {
            var pos = new google.maps.LatLng(item[0], item[1]),
                singleObjOptions = {
                    position: pos,
                    animation: google.maps.Animation.DROP,
                    optimized: false,
                    icon: objectMarkerIcon,
                    map: objectsMap
                };

		    new google.maps.Marker(singleObjOptions);
            
			bounds.extend(singleObjOptions.position);
		}

		function fitBounds() {

			if (mapPoints.length === 1)
			{
				objectsMap.setCenter(mapCenterCoordinate);
				return;
			}

			objectsMap.fitBounds(bounds);
		    // ZOOM CORRECTION
			if (device.desktop() && boundsCorrection === true)
			{
				var listener = google.maps.event.addListenerOnce(objectsMap, 'bounds_changed', function() {
					objectsMap.setZoom(objectsMap.getZoom()-1);
				});
			}
		}
        
        var delayFitBounds;
	    google.maps.event.addDomListener(window, 'resize', function() {
			clearTimeout(delayFitBounds);
            delayFitBounds = setTimeout(function(){
				fitBounds();
			}, 500);
		});

		mapInit();
	}
    
    // OVERLAY FORM custom functions
    function custom_validate($this) {
        // inputs text, email
        if($this.find('.required').length) {
            $this.find('.required').each(function(){
                var $this_input_text = $(this).find('input[type="text"]'),
                    $this_input_email = $(this).find('input[type="email"]'),
                    $error_desc = $(this).data('error');

                var $regex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
                    $regex_val = $regex.test($this_input_email.val());

                // inputs text
                if($this_input_text.val() == 0) {
                    $(this).addClass('is-error');
                    if(!$(this).find('.error-desc').length) {
                        $(this).append('<span class="error-desc">'+$error_desc+'</span>');
                    }
                }
                else {
                    $(this)
                        .removeClass('is-error')
                        .addClass('is-validate')
                        .find('.error-desc')
                        .remove();
                }
                // inputs email
                if($this_input_email.length) {
                    if($regex_val == false) {
                        $(this).addClass('is-error');
                        if(!$(this).find('.error-desc').length) {
                            $(this).append('<span class="error-desc">'+$error_desc+'</span>');
                        }
                    } else {
                        $(this)
                        .removeClass('is-error')
                        .addClass('is-validate')
                        .find('.error-desc')
                        .remove();
                    }
                }
            })
        }
        // checkboxes
        if($this.find('.required-checkbox').length) {
            var $this_input = $this.find('.required-checkbox').find('input[type="checkbox"]'),
                $error_desc = $this.find('.required-checkbox').data('error');
            
            // inputs checkboxes
            if(!$this.find('.is-checked').length) {
                if(!$this.find('.required-checkbox').find('.error-desc').length) {
                    $this.find('.required-checkbox').append('<span class="error-desc">'+$error_desc+'</span>');
                }
                if($this.find('.custom-checkbox').length){
                    $this.find('.custom-checkbox[data-error]').addClass('is-error');
                }
            } else {
                $this
                    .find('.required-checkbox')
                    .find('.error-desc')
                    .remove();
                if($this.find('.custom-checkbox').length){
                    $this.find('.custom-checkbox[data-error]').removeClass('is-error');
                }
            }
        }
    }

    // validations blur
    $('.overlay-form input').blur(function(){
        var $this = $(this).closest('[data-slide]');
        custom_validate($this);
    })

    // open
    $('[data-overlay]').on('click', function(){
        var $this = $(this), 
            $this_val = $this.data('overlay'),
            $this_content = $('[data-overlay-content="'+$this_val+'"]');

        $this_content.addClass('is-open');
    });

    // close
    $('.js-overlay-form-close').on('click', function(){
        $(this).closest('[data-overlay-content]').addClass('is-hide');
        setTimeout(function(){
            $('[data-overlay-content]').removeClass('is-hide is-open');
        }, 1000);
    });

    // prev/next
    $('.js-overlay-form-pagination').on('click', function(){
        var $this = $(this),
            $this_parent = $this.closest('[data-slide]'),
            $this_data_val = $this_parent.data('slide'),
            $parent = $this.closest('.overlay-form__slides'),
            $current_step = $this.closest('.overlay-form').find('.overlay-form__steps-current');

        
            if($this.hasClass('js-overlay-form-pagination-next')) {
                custom_validate($this_parent);
                if(!$this_parent.find('.is-error, .error-desc').length) {
                    $this_parent.removeClass('is-active');
                    $('[data-slide="'+ ($this_data_val + 1) +'"]').addClass('is-active');
                    $current_step.text($this_data_val + 1);
                }
            } else {
                $this_parent.removeClass('is-active');
                $('[data-slide="'+ ($this_data_val - 1) +'"]').addClass('is-active');
                $current_step.text($this_data_val - 1);
            }
    });

    // checkboxes
    $('.custom-checkbox, .custom-checkbox-tile').on('click', function(){
        var $this = $(this),
            $this_chx = $this.find('input[type="checkbox"]');
        
        if($this_chx.prop('checked')) {
            $this.addClass('is-checked');
        } else {
            $this.removeClass('is-checked');
        }
       
        $this_chx[0].click();
    });

    // custom fileuploader
    $('.custom-fileuploader__button').on('click', function(){
        var $this = $(this),
            $this_input = $this.siblings('input[type="file"]'),
            $output = $this.siblings('.custom-fileuploader__list');

        $this_input[0].click();

        $this_input.on('change', function(){
            $output.children().remove();
            for (var i = 0; i < this.files.length; i++) {
                $output.append('<div class="custom-fileuploader__list-item"><i class="ico-overlay-interface"></i><span>'+ this.files[i].name+'</span></div>');
            }
        })
    });
    
    
    counters();
});

$(window).on('load', function(){
    $('[data-preload]').addClass('is-loaded');
    $('[data-preloader]').addClass('is-loaded');
    
    if($.fn.owlCarousel) {
        if ($('.js-home-tablet-slider').length)
        {
            var $homeTabletSlider = $('.js-home-tablet-slider');

            $homeTabletSlider.owlCarousel({
                items: 1,
                margin: 0,
                loop: true,
                nav: false,
                dots: false,
                animateOut: 'fadeOut',
                mouseDrag: false,
                touchDrag: false,
                pullDrag: false,
                autoplay: false,
                autoplaySpeed: 800,
                navSpeed: 800,
                dotsSpeed: 800,
                dragEndSpeed: 800,
                autoplayTimeout: 7000,
                autoplayHoverPause: false,
                stagePadding: 0,
                navText: ['',''],
                responsiveClass: true,
                responsive: {
                    0:{
                        items: 1
                    },
                    600:{
                        items: 1
                    },
                    1000:{
                        items: 1
                    }
                }
            });
        }
        
        if ($('.js-home-mobile-slider').length)
        {
            var $homeMobileSlider = $('.js-home-mobile-slider');

            $homeMobileSlider.owlCarousel({
                items: 1,
                margin: 0,
                loop: true,
                nav: false,
                dots: false,
                animateOut: 'fadeOut',
                mouseDrag: false,
                touchDrag: false,
                pullDrag: false,
                autoplay: false,
                autoplaySpeed: 800,
                navSpeed: 800,
                dotsSpeed: 800,
                dragEndSpeed: 800,
                autoplayTimeout: 7000,
                autoplayHoverPause: false,
                stagePadding: 0,
                navText: ['',''],
                responsiveClass: true,
                responsive: {
                    0:{
                        items: 1
                    },
                    600:{
                        items: 1
                    },
                    1000:{
                        items: 1
                    }
                }
            });
        }

        if ($('.js-home-slider').length)
        {
            var $homeSlider = $('.js-home-slider');
            
            $homeSlider.on('initialized.owl.carousel', function(event) {
                initSliderCounters(1000);
            });
            
            $homeSlider.owlCarousel({
                items: 1,
                margin: 5,
                loop: true,
                nav: false,
                dots: true,
                dotsClass: 'owl-dots owl-dots--white',
                animateOut: 'fadeOut',
                mouseDrag: false,
                touchDrag: false,
                autoplay: true,
                autoplaySpeed: 800,
                navSpeed: 800,
                dotsSpeed: 800,
                dragEndSpeed: 800,
                autoplayTimeout: 7000,
                autoplayHoverPause: false,
                stagePadding: 0,
                navText: ['',''],
                responsiveClass: true,
                responsive: {
                    0:{
                        items: 1
                    },
                    600:{
                        items: 1
                    },
                    1000:{
                        items: 1
                    }
                }
            });
            
            $homeSlider.on('change.owl.carousel', function(event) {
                setTimeout(function(){
                    if (event.namespace && event.property.name === 'position') {
                        var target = event.relatedTarget.relative(event.property.value, true);
                        $homeTabletSlider.owlCarousel('to', target, 300, true);
                    } 
                }, 450);
                
                setTimeout(function(){
                    if (event.namespace && event.property.name === 'position') {
                        var target = event.relatedTarget.relative(event.property.value, true);
                        $homeMobileSlider.owlCarousel('to', target, 300, true);
                    }
                }, 650);
            });
            
            $homeSlider.on('translated.owl.carousel', function(event) {
                initSliderCounters();
            });
            
            $homeSlider.on('translate.owl.carousel', function(event) {
                resetSliderCounters();
            });

            function initSliderCounters(delay) {
                var delay = (typeof delay !== 'undefined') ?  delay : 500,
                    $currentSlide = $homeSlider.find('.owl-item.active'),
                    $currentSlideCounters = $('.js-counter-slider', $currentSlide);
                
                setTimeout(function(){
                    counters($currentSlideCounters);
                }, delay);
            }
            
            function resetSliderCounters() {
                var $otherSlides = $homeSlider.find('.owl-item:not(.active)'),
                    $otherSlidesCounters = $('.js-counter-slider', $otherSlides);
                
                setTimeout(function(){
                    $otherSlidesCounters.each(function() {
                        $(this).removeClass('counting').removeClass('finished').find('[data-value]').text('0');
                    });
                }, 0);
            }
        }
    }

    if ($('html').hasClass('is-home-page'))
        $('html').addClass('is-home-page-loaded')
    
    windowWidth = $(window).width();
    
    if (windowWidth >= 1200)
    {
        $('.js-layer-parallax').parallax();
        $('.js-step-section-paroller').paroller();
    }
    
    if (windowWidth >= 992)
    {
        $('.js-home-squares-paroller').paroller();
        $('.js-home-offer-paroller').paroller();
        $('.js-contact-paroller').paroller();
        $('.js-devices-paroller').paroller();
        $('.js-speech-bubble-paroller').paroller();
        $('.js-path-paroller').paroller();
        $('.js-project-bg-paroller').paroller();
        $('.js-about-bg-paroller').paroller();
    }
    
    if (windowWidth >= 768)
    {
        $('.js-projects-paroller').paroller();
        $('.js-cta-signet-paroller').paroller();
    }
});

function counters($counters) {
    var $counters = (typeof $counters !== 'undefined') ?  $counters : $('.js-counter');

    $window.scroll(function() {
        var scrollTop = $window.scrollTop();

        $counters.each(function() {
            var $counter = $(this);
            
            if (!$counter.hasClass('counting') && !$counter.hasClass('finished'))
            {
                var parentsOffset = 0;
                $counter.parents().each(function() {
                    if ($(this).css('position') == 'relative' || $(this).css('position') == 'absolute')
                    {
                        var parentOffset = $(this).position().top;

                        if (parentOffset > 0)
                            parentsOffset += parentOffset;
                        else
                            return false;
                    }
                });

                if ($counter.position().top + parentsOffset - $window.height() < scrollTop)
                {
                    var $counterPlaceholder = $counter.find('[data-value]'),
                        countTo = $counterPlaceholder.attr('data-value');

                    $counter.addClass('counting'); 

                    $({
                        countNum: $counterPlaceholder.text()
                    }).animate({
                        countNum: countTo
                    },
                    {
                        duration: 2000,
                        easing: 'swing',
                        step: function() {
                            $counterPlaceholder.text(Math.floor(this.countNum));
                        },
                        complete: function() {
                            $counterPlaceholder.text(this.countNum);
                            $counter.addClass('finished');
                            $counter.removeClass('counting');
                        }
                    });
                }
            } 
        });
    }).scroll();
}

function decolines() {
    var $markers = $('.js-decoline-marker');

    $window.scroll(function() {
        var scrollTop = $window.scrollTop();

        $markers.each(function() {
            if (!$(this).data('start-y'))
                $(this).data('start-y', $(this).position().top);

            $(this).css('top', $(this).data('start-y') + ((scrollTop / 100) * $(this).data('ratio')));
        });
    }).scroll();
}

var hideNavInterval;
function hideNav()
{
	var didScroll,
        lastScrollTop = 0,
        delta = 5,
        hideOffset = 500,
        $navbar = $('.js-top'),
        navbarHeight = $navbar.outerHeight(true);

    $window.scroll(function(){
        didScroll = true;
    });

    hideNavInterval = setInterval(function() {
        if (didScroll) {
            hasScrolled();
            didScroll = false;
        }
    }, 250);

    function hasScrolled() {
        var st = $window.scrollTop();

        if (st > 25) {
            $('html').addClass('is-top-minimize');
        }
        else {
            $('html').removeClass('is-top-minimize');
        }
        
        if (Math.abs(lastScrollTop - st) <= delta)
            return;

        if (st > lastScrollTop && st > navbarHeight + hideOffset){
            $('html').addClass('is-nav-hidden');
        } else {
            if(st + $window.height() < $document.outerHeight()) {
                $('html').removeClass('is-nav-hidden');
            }
        }

        lastScrollTop = st;
    }
}

function resetHideNav() 
{
	$('html').removeClass('is-nav-hidden').removeClass('is-top-minimize');
    clearInterval(hideNavInterval);
}